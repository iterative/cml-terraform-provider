#!/bin/sh
sudo systemctl is-enabled cml.service && return 0
FILE=/var/log/cml_stack.log
log_run() {
  printf "tpi:setup.sh: cmd --- %s ---\n" "$1"
  eval "$1"
}
if [ ! -f "$FILE" ]; then
  DEBIAN_FRONTEND=noninteractive
  echo "APT::Get::Assume-Yes \"true\";" | sudo tee -a /etc/apt/apt.conf.d/90assumeyes
  log_run "sudo apt remove unattended-upgrades"

  log_run "systemctl disable apt-daily-upgrade.service"

  log_run "sudo add-apt-repository universe -y"
  log_run "sudo add-apt-repository ppa:git-core/ppa -y"
  log_run "sudo apt update && sudo apt-get install -y software-properties-common build-essential git"

  log_run "sudo curl -fsSL https://get.docker.com -o get-docker.sh && sudo sh get-docker.sh"
  log_run "sudo usermod -aG docker ubuntu"
  log_run "sudo setfacl --modify user:ubuntu:rw /var/run/docker.sock"

  log_run "curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -"
  log_run 'sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"'
  log_run "sudo apt update && sudo apt-get install -y terraform"

  log_run "curl -sL https://deb.nodesource.com/setup_16.x | sudo bash"
  log_run "sudo apt update && sudo apt-get install -y nodejs"

  log_run "sudo apt install -y ubuntu-drivers-common"
  log_run "sudo ubuntu-drivers autoinstall"

  log_run "sudo curl https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/0.5.0/linux-amd64/docker-credential-ecr-login --output /usr/bin/docker-credential-ecr-login"
  log_run "sudo chmod 755 /usr/bin/docker-credential-ecr-login"

  log_run "curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -"
  log_run "curl -s -L https://nvidia.github.io/nvidia-docker/ubuntu18.04/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list"
  log_run "sudo apt update && sudo apt install -y nvidia-docker2"
  log_run "sudo systemctl restart docker"

  echo OK | sudo tee "$FILE"
fi

sudo npm config set user 0 && sudo npm install --global 18 value with "quotes" and spaces
sudo tee /usr/bin/cml.sh << 'EOF'
#!/bin/sh
export AZURE_CLIENT_ID='3 value with "quotes" and spaces'
export AZURE_CLIENT_SECRET='4 value with "quotes" and spaces'
export AZURE_SUBSCRIPTION_ID='5 value with "quotes" and spaces'
export AZURE_TENANT_ID='6 value with "quotes" and spaces'

HOME="$(mktemp -d)" exec $(which cml-runner || echo $(which cml-internal || echo cml) runner) \
   --name '10 value with "quotes" and spaces' \
   --labels '16 value with "quotes" and spaces' \
   --idle-timeout 11 \
   --driver '15 value with "quotes" and spaces' \
   --repo '14 value with "quotes" and spaces' \
   --token '13 value with "quotes" and spaces' \
   --single \
   \
   --tf-resource eyJtb2RlIjoibWFuYWdlZCIsInR5cGUiOiJpdGVyYXRpdmVfY21sX3J1bm5lciIsIm5hbWUiOiJydW5uZXIiLCJwcm92aWRlciI6InByb3ZpZGVyW1wicmVnaXN0cnkudGVycmFmb3JtLmlvL2l0ZXJhdGl2ZS9pdGVyYXRpdmVcIl0iLCJpbnN0YW5jZXMiOlt7InByaXZhdGUiOiIiLCJzY2hlbWFfdmVyc2lvbiI6MCwiYXR0cmlidXRlcyI6eyJuYW1lIjoiMTAgdmFsdWUgd2l0aCBcInF1b3Rlc1wiIGFuZCBzcGFjZXMiLCJsYWJlbHMiOiIiLCJpZGxlX3RpbWVvdXQiOjExLCJyZXBvIjoiIiwidG9rZW4iOiIiLCJkcml2ZXIiOiIiLCJjbG91ZCI6ImF6dXJlIiwiY3VzdG9tX2RhdGEiOiIiLCJpZCI6IiIsImltYWdlIjoiIiwiaW5zdGFuY2VfZ3B1IjoiIiwiaW5zdGFuY2VfaGRkX3NpemUiOjEyLCJpbnN0YW5jZV9pcCI6IiIsImluc3RhbmNlX2xhdW5jaF90aW1lIjoiIiwiaW5zdGFuY2VfdHlwZSI6IiIsInJlZ2lvbiI6IjkgdmFsdWUgd2l0aCBcInF1b3Rlc1wiIGFuZCBzcGFjZXMiLCJzc2hfbmFtZSI6IiIsInNzaF9wcml2YXRlIjoiIiwic3NoX3B1YmxpYyI6IiIsImF3c19zZWN1cml0eV9ncm91cCI6IiJ9fV19
EOF
sudo chmod +x /usr/bin/cml.sh

sudo bash -c 'cat << EOF > /etc/systemd/system/cml.service
[Unit]
  After=default.target

[Service]
  Type=simple
  ExecStart=/usr/bin/cml.sh

[Install]
  WantedBy=default.target
EOF'
sudo systemctl daemon-reload
sudo systemctl enable cml.service
nvidia-smi &>/dev/null || reboot
sudo systemctl start cml.service
